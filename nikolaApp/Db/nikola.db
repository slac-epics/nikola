# Record to query running status (bi)

record(bi, "$(device):Status") {
    field(DESC, "Running Status")
    field(DTYP, "stream")
    field(INP, "@nikola.proto RunStatus $(port)")
    field(ZNAM, "STOPPED")
    field(ONAM, "RUNNING")
}

# Record to query current temperature (ai)
record(ai, "$(device):CurrentTemp") {
    field(DESC, "Current Temperature")
    field(DTYP, "stream")
    field(INP, "@nikola.proto CurrentTemperature $(port)")
}

# Record to query set temperature (ai)
record(ai, "$(device):SetTemp") {
    field(DESC, "Set Temperature")
    field(DTYP, "stream")
    field(INP, "@nikola.proto SetTemperature $(port)")
}

# Record to set the temperature (ao)
record(ao, "$(device):SetTempControl") {
    field(DESC, "Set Temperature Control")
    field(DTYP, "stream")
    field(OUT, "@nikola.proto SetTemperatureValue $(port)")
}

# Record to restart the device (bo)
record(bo, "$(device):Restart") {
    field(DESC, "Restart Device")
    field(DTYP, "stream")
    field(OUT, "@nikola.proto Restart $(port)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# Record to run or stop the device (bo)
record(bo, "$(device):RunStop") {
    field(DESC, "Run/Stop Device")
    field(DTYP, "stream")
    field(OUT, "@nikola.proto RunStop $(port)")
    field(ZNAM, "STOP")
    field(ONAM, "RUN")
}

# chillerApp.db

# Define an mbbiDirect record to read the full chiller status
record(mbbiDirect, "$(device):ChillerStatus") {
    field(DESC, "Chiller Status")
    field(DTYP, "stream")
    field(INP, "@nikola.proto ChillerStatus $(port)")
}

# Define bi records to read and decode each bit of the status

record(bi, "$(device):ChillerRunning") {
    field(DESC, "Chiller Running")
    field(INP, "$(device):ChillerStatus.B0 CP")
    field(ZNAM, "STOPPED")
    field(ONAM, "RUNNING")
}

record(bi, "$(device):RemoteOrLocal") {
    field(DESC, "Remote or Local")
    field(INP, "$(device):ChillerStatus.B1 CP")
    field(ZNAM, "LOCAL")
    field(ONAM, "REMOTE")
}

record(bi, "$(device):ChillerReady") {
    field(DESC, "Chiller Ready")
    field(INP, "$(device):ChillerStatus.B2 CP")
    field(ZNAM, "NOTREADY")
    field(ONAM, "READY")
}

record(bi, "$(device):TempLowAlarm") {
    field(DESC, "Temp Low Alarm")
    field(INP, "$(device):ChillerStatus.B3 CP")
    field(ZNAM, "Normal")
    field(ONAM, "Temp<SP-WIDTH")
}

record(bi, "$(device):TempHighAlarm") {
    field(DESC, "Temp High Alarm")
    field(INP, "$(device):ChillerStatus.B4 CP")
    field(ZNAM, "Normal")
    field(ONAM, "Temp>SP+WIDTH")
}

record(bi, "$(device):HeatingOrCooling") {
    field(DESC, "Heating or Cooling")
    field(INP, "$(device):ChillerStatus.B5 CP")
    field(ZNAM, "COOLING")
    field(ONAM, "HEATING")
}

record(bi, "$(device):SystemWarning") {
    field(DESC, "System Warning")
    field(INP, "$(device):ChillerStatus.B6 CP")
    field(ZNAM, "NONE")
    field(ONAM, "WARNING")
}

record(bi, "$(device):SystemAlarm") {
    field(DESC, "System Alarm")
    field(INP, "$(device):ChillerStatus.B7 CP")
    field(ZNAM, "NONE")
    field(ONAM, "ALARM")
}

# Define an mbbiDirect record to read the full chiller faults
record(mbbiDirect, "$(device):ChillerFaults") {
    field(DESC, "Chiller Faults")
    field(DTYP, "stream")
    field(INP, "@nikola.proto ChillerFaults $(port)")
}

# Define bi records to read and decode each bit of the faults

record(bi, "$(device):RTDFault") {
    field(DESC, "RTD Fault")
    field(INP, "$(device):ChillerFaults.B0 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):TankLevelLow") {
    field(DESC, "Tank Level Low")
    field(INP, "$(device):ChillerFaults.B1 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):VFDFault") {
    field(DESC, "VFD Fault")
    field(INP, "$(device):ChillerFaults.B2 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):RTDAlarmWidth") {
    field(DESC, "RTD < > Alarm Width")
    field(INP, "$(device):ChillerFaults.B4 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):TankLevelEmpty") {
    field(DESC, "Tank Level Empty")
    field(INP, "$(device):ChillerFaults.B5 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):CoolantFlowLow") {
    field(DESC, "Coolant Flow Low")
    field(INP, "$(device):ChillerFaults.B7 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):CoolantFlowHigh") {
    field(DESC, "Coolant Flow High")
    field(INP, "$(device):ChillerFaults.B8 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):PCWFlowLow") {
    field(DESC, "PCW Flow Low")
    field(INP, "$(device):ChillerFaults.B9 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):ResistivityHigh") {
    field(DESC, "Resistivity High")
    field(INP, "$(device):ChillerFaults.B11 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):ResistivityLow") {
    field(DESC, "Resistivity Low")
    field(INP, "$(device):ChillerFaults.B12 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}

record(bi, "$(device):PressureSensor") {
    field(DESC, "Pressure Sensor Fault")
    field(INP, "$(device):ChillerFaults.B14 CP")
    field(ZNAM, "OK")
    field(ONAM, "FAULT")
}
